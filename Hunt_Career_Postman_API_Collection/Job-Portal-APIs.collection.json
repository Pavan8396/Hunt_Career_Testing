{
	"info": {
		"_postman_id": "1c86c342-eb54-4ae5-8b00-162d2b6c9834",
		"name": "Job Portal Auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32241718"
	},
	"item": [
		{
			"name": "User Authentication",
			"item": [
				{
					"name": "Register User - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"userEmail\", pm.variables.replaceIn('{{$randomEmail}}'));",
									"pm.collectionVariables.set(\"userFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
									"pm.collectionVariables.set(\"userLastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
									"pm.collectionVariables.set(\"userPhoneNumber\", '1234567890');"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response body contains success message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"User registered successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \r\n    \"firstName\": \"{{userFirstName}}\",\r\n    \"lastName\": \"{{userLastName}}\",\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"password123\",\r\n    \"phoneNumber\": \"{{userPhoneNumber}}\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response body contains token and user object\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.expect(jsonData).to.have.property('user');",
									"    pm.expect(jsonData.user).to.have.property('_id');",
									"    pm.expect(jsonData.user).to.have.property('name');",
									"    pm.expect(jsonData.user).to.have.property('email');",
									"});",
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"authToken_user\", jsonData.token);",
									"pm.collectionVariables.set(\"userId\", jsonData.user._id);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"password123\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User - Duplicate Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"User already exists\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \"firstName\": \"{{userFirstName}}\",\r\n    \"lastName\": \"{{userLastName}}\",\r\n        \"email\": \"{{userEmail}}\",    \r\n        \"password\": \"password123\",\r\n            \"phoneNumber\": \"{{userPhoneNumber}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User - Missing Required Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"All fields are required\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \"lastName\": \"{{userLastName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n        \"password\": \"password123\",\r\n            \"phoneNumber\": \"1234567890\"\r\n    \r\n    }"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User - Invalid Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid email format\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"{{userFirstName}}\",\r\n        \"lastName\": \"{{userLastName}}\",\r\n        \"email\": \"invalid-email\",\r\n            \"password\": \"password123\",\r\n                \"phoneNumber\": \"1234567890\"\r\n                }"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User - Password Too Short",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Password must be at least 8 characters long\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"firstName\": \"{{userFirstName}}\",\r\n     \"lastName\": \"{{userLastName}}\",\r\n     \"email\": \"{{$randomEmail}}\",\r\n     \"password\": \"pass\",\r\n     \"phoneNumber\": \"1234567890\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User - Invalid Phone Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Phone number must be a 10-digit number\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"{{userFirstName}}\",\r\n    \"lastName\": \"{{userLastName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"password123\",\r\n    \"phoneNumber\": \"123\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User - Incorrect Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid email or password\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"wrongpassword\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User - Non-Existent User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid email or password\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"nonexistent@example.com\",\r\n    \"password\": \"password123\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User - Missing Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Email and password are required\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\": \"{{userEmail}}\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employer Authentication",
			"item": [
				{
					"name": "Register Employer - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"employerEmail\", pm.variables.replaceIn('{{$randomEmail}}'));",
									"pm.collectionVariables.set(\"companyName\", pm.variables.replaceIn('{{$randomCompanyName}}'));"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response body contains success message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Employer registered successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"companyName\": \"{{companyName}}\",\r\n    \"email\": \"{{employerEmail}}\",\r\n    \"password\": \"password123\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/employers/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employers",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Employer - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response body contains token and user object\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.expect(jsonData).to.have.property('user');",
									"    pm.expect(jsonData.user).to.have.property('_id');",
									"    pm.expect(jsonData.user).to.have.property('name');",
									"    pm.expect(jsonData.user).to.have.property('email');",
									"});",
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"authToken_employer\", jsonData.token);",
									"pm.collectionVariables.set(\"employerId\", jsonData.user._id);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{employerEmail}}\",\r\n    \"password\":\"password123\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/employers/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Employer - Duplicate Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Employer already exists\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \"companyName\": \"{{companyName}}\",    \"email\": \"{{employerEmail}}\",    \"password\": \"password123\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/employers/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employers",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Employer - Missing Required Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"All fields are required\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \"email\": \"{{$randomEmail}}\",    \"password\": \"password123\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/employers/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employers",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Employer - Invalid Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid email format\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \"companyName\": \"{{companyName}}\",    \"email\": \"invalid-email\",    \"password\": \"password123\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/employers/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employers",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Employer - Password Too Short",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Password must be at least 8 characters long\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \"companyName\": \"{{companyName}}\",    \"email\": \"{{$randomEmail}}\",    \"password\": \"pass\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/employers/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employers",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Employer - Incorrect Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid email or password\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \"email\": \"{{employerEmail}}\",    \"password\": \"wrongpassword\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/employers/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Employer - Non-Existent Employer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid email or password\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \"email\": \"nonexistent@example.com\",    \"password\": \"password123\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/employers/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Employer - Missing Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response body contains error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Email and password are required\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \"email\": \"{{employerEmail}}\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/employers/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"employers",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Jobs",
			"item": [
				{
					"name": "Create Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"jobId\", jsonData._id);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_employer}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"title\": \"{{$randomJobTitle}}\",    \"company\": \"{{companyName}}\",    \"description\": \"Developing and maintaining web applications.\",    \"candidate_required_location\": \"San Francisco, CA\",    \"job_type\": \"Full-Time\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/jobs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/jobs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Employer Jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_employer}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/jobs/employer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs",
								"employer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Job By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/jobs/{{jobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_employer}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \"title\": \"Senior Software Engineer\",    \"company\": \"{{companyName}}\",    \"description\": \"Leading the development of new features.\",    \"candidate_required_location\": \"Remote\",    \"job_type\": \"Full-Time\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/jobs/{{jobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Job - Missing Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_employer}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \"title\": \"Software Engineer\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/jobs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Applications",
			"item": [
				{
					"name": "Apply for Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/applications/apply/{{jobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications",
								"apply",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Application for Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"applicationId\", jsonData._id);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_user}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/jobs/{{jobId}}/application",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobId}}",
								"application"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Applications for Job by Employer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_employer}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/applications/job/{{jobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications",
								"job",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Shortlist Candidate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_employer}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/applications/shortlist/{{applicationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications",
								"shortlist",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Chat",
			"item": [
				{
					"name": "Get Chat History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_user}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chat/{{applicationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chat",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Chat History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response body contains the correct message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message', 'Chat history deleted successfully');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_user}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chat/{{applicationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chat",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_user}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/chat/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chat",
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cleanup",
			"item": [
				{
					"name": "Delete Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body contains the correct message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('message', 'Selected jobs have been removed successfully');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken_employer}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/jobs/{{jobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "userEmail",
			"value": ""
		},
		{
			"key": "userFirstName",
			"value": ""
		},
		{
			"key": "userLastName",
			"value": ""
		},
		{
			"key": "userPhoneNumber",
			"value": ""
		},
		{
			"key": "authToken_user",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "employerEmail",
			"value": ""
		},
		{
			"key": "companyName",
			"value": ""
		},
		{
			"key": "authToken_employer",
			"value": ""
		},
		{
			"key": "employerId",
			"value": ""
		},
		{
			"key": "jobId",
			"value": ""
		},
		{
			"key": "applicationId",
			"value": ""
		}
	]
}