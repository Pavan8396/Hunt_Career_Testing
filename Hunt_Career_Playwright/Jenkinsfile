// Function to print a standardized banner
def printBanner(message) {
    echo '----------------------------------------'
    echo "    ${message}"
    echo '----------------------------------------'
}

pipeline {
    agent any

    tools {
        nodejs 'NodeJS'
    }

    options {
        timestamps()
        timeout(time: 30, unit: 'MINUTES')
        skipDefaultCheckout true
    }

    parameters {
        string(name: 'BRANCH', defaultValue: 'main', description: 'Git branch to build from')
    }

    stages {
        stage('Checkout') {
            steps {
                printBanner("CHECKING OUT SOURCE CODE: ${params.BRANCH}")
                cleanWs()
                checkout scm
            }
        }

        stage('Playwright Execution') {
            steps {
                dir('Hunt_Career_Playwright') {
                    script {
                        try {
                            stage('Install Dependencies') {
                                printBanner('INSTALLING NPM DEPENDENCIES')
                                bat 'npm ci'
                            }

                            stage('Install Playwright Browsers') {
                                printBanner('INSTALLING PLAYWRIGHT BROWSERS')
                                bat 'npx playwright install --with-deps'
                            }

                            stage('Run Playwright Tests') {
                                printBanner('RUNNING PLAYWRIGHT TESTS')
                                bat 'npx playwright test'
                            }
                        } catch (err) {
                            echo "❌ Playwright tests failed: ${err.message}"
                            currentBuild.result = 'FAILURE'
                            error("Pipeline failed due to Playwright test failures.")
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            dir('Hunt_Career_Playwright') {
                script {
                    try {
                        printBanner('ARCHIVING & PUBLISHING REPORTS')

                        archiveArtifacts artifacts: 'playwright-report/', allowEmptyArchive: true

                        publishHTML(target: [
                            allowMissing: true,
                            alwaysLinkToLastBuild: true,
                            keepAll: true,
                            reportDir: 'playwright-report',
                            reportFiles: 'index.html',
                            reportName: 'Playwright Test Report'
                        ])
                    } catch (err) {
                        echo "⚠️  Could not publish reports: ${err.message}"
                    }
                }
            }
        }
    }
}
