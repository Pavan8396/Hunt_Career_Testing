pipeline {
    agent any // You might want to specify a particular agent with Node.js installed

    environment {
        // Define any environment variables needed for your tests
        // BASE_URL = "http://localhost:3000" // Example for Playwright
        // CI = 'true' // Often used by test runners
    }

    tools {
        nodejs 'NodeJS'
        // If you have Node.js configured globally in Jenkins, you can specify it here
        // nodejs 'NodeJS-18' // Example: Replace with your NodeJS configuration name
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code...'
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'Installing npm dependencies...'
                // For Windows agents, use bat
                // bat 'npm install'
                // For Linux/macOS agents, use sh
                bat 'npm install'
            }
        }

        stage('Install Playwright Browsers') {
            steps {
                echo 'Installing Playwright browsers...'
                // For Windows agents, use bat
                // bat 'npx playwright install --with-deps'
                // For Linux/macOS agents, use sh
                bat 'npx playwright install --with-deps' // --with-deps installs necessary OS dependencies
            }
        }

        stage('Run Playwright Tests') {
            steps {
                echo 'Running Playwright tests...'
                // For Windows agents, use bat
                // bat 'npx playwright test'
                // For Linux/macOS agents, use sh
                sh 'npx playwright test'
            }
        }

        stage('Archive Reports') {
            steps {
                echo 'Archiving Playwright reports...'
                // Archive Playwright HTML report (default output location)
                archiveArtifacts artifacts: 'playwright-report/**/*', allowEmptyArchive: true
                // Archive test results data (if needed for other processing)
                // archiveArtifacts artifacts: 'test-results/**/*', allowEmptyArchive: true
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
        unstable {
            echo 'Pipeline is unstable.'
        }
    }
}