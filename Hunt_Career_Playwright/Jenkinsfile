pipeline {
    agent any 

    tools {
        nodejs 'NodeJS'  // Ensure this is installed via Jenkins Global Tool Configuration
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code...'
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'Installing npm dependencies...'
                bat 'npm install'
            }
        }

        stage('Install Playwright Browsers') {
            steps {
                echo 'Installing Playwright browsers...'
                bat 'npx playwright install --with-deps'
            }
        }

        stage('Run Playwright Tests') {
            steps {
                script {
                    try {
                        echo 'Running Playwright tests...'
                        bat 'npx playwright test'
                    } catch (any) {
                        currentBuild.result = 'UNSTABLE'
                        echo "Playwright tests execution failed or reported errors. Build set to UNSTABLE."
                        throw any // Re-throw the error
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished. Archiving and publishing reports...'
            // Existing archiveArtifacts for Playwright reports
            archiveArtifacts artifacts: 'playwright-report/**/*', allowEmptyArchive: true

            // Add HTML Publisher step for Playwright report
            publishHTML(target: [
                allowMissing: true,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'playwright-report', // Path from workspace root
                reportFiles: 'index.html', // Main html file
                reportName: 'Playwright Test Report'
            ])
        }
        success {
            echo 'Pipeline executed successfully!'
            // echo 'TODO: Send success notification'
        }
        failure {
            echo 'Pipeline failed. Sending failure notification (placeholder)...'
            // Example placeholder for mail:
            // mail to: 'your-team@example.com', subject: "FAILED: Pipeline ${env.JOB_NAME} [${env.BUILD_NUMBER}]", body: "Check console output: ${env.BUILD_URL}"
        }
        unstable {
            echo 'Pipeline is unstable (tests likely failed). Sending unstable notification (placeholder)...'
            // Example placeholder for mail:
            // mail to: 'your-team@example.com', subject: "UNSTABLE: Pipeline ${env.JOB_NAME} [${env.BUILD_NUMBER}]", body: "Tests reported issues. Check results: ${env.BUILD_URL}"
        }
    }
}