pipeline {
    agent any 

    tools {
        maven 'MAVEN'
        jdk 'JAVA'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code...'
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo 'Building the project...'
                bat 'mvn -B clean install -DskipTests'
            }
        }

        stage('Test') {
            steps {
                script {
                    try {
                        echo 'Running tests...'
                        bat 'mvn -B test'
                    } catch (any) {
                        currentBuild.result = 'UNSTABLE'
                        echo "TestNG tests execution failed or reported errors. Build set to UNSTABLE."
                        throw any // Re-throw the error
                    }
                }
            }
        }

        stage('Archive Reports') {
            steps {
                echo 'Archiving reports...'
                archiveArtifacts artifacts: 'test-output/ExtentReports/extentReport.html', allowEmptyArchive: true
                archiveArtifacts artifacts: 'test-output/emailable-report.html', allowEmptyArchive: true
                archiveArtifacts artifacts: 'test-output/testng-results.xml', allowEmptyArchive: true
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished. Publishing reports and archiving...'
            
            archiveArtifacts artifacts: 'test-output/ExtentReports/extentReport.html', allowEmptyArchive: true
            archiveArtifacts artifacts: 'test-output/emailable-report.html', allowEmptyArchive: true
            archiveArtifacts artifacts: 'test-output/testng-results.xml', allowEmptyArchive: true
            
            junit testResults: 'test-output/testng-results.xml', allowEmptyResults: true

            publishHTML(target: [
                allowMissing: true,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'test-output/ExtentReports',
                reportFiles: 'extentReport.html', 
                reportName: 'Extent Test Report'
            ])

            publishHTML(target: [
                allowMissing: true,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'test-output',
                reportFiles: 'emailable-report.html', 
                reportName: 'TestNG Emailable Report'
            ])
        }
        success {
            echo 'Pipeline executed successfully!'
            // echo 'TODO: Send success notification' 
        }
        failure {
            echo 'Pipeline failed. Sending failure notification (placeholder)...'
            // Example placeholder for mail:
            // mail to: 'your-team@example.com', subject: "FAILED: Pipeline ${env.JOB_NAME} [${env.BUILD_NUMBER}]", body: "Check console output: ${env.BUILD_URL}"
        }
        unstable {
            echo 'Pipeline is unstable (tests likely failed). Sending unstable notification (placeholder)...'
            // Example placeholder for mail:
            // mail to: 'your-team@example.com', subject: "UNSTABLE: Pipeline ${env.JOB_NAME} [${env.BUILD_NUMBER}]", body: "Tests reported issues. Check results: ${env.BUILD_URL}"
        }
    }
}
