// Function to print a standardized banner
def printBanner(message) {
    echo '----------------------------------------'
    echo "    ${message}"
    echo '----------------------------------------'
}

pipeline {
    agent any

    tools {
        jdk 'JAVA'
        maven 'MAVEN'
    }

    options {
        timestamps()
        timeout(time: 30, unit: 'MINUTES')
        // Clean workspace before build
        skipDefaultCheckout true
    }

    parameters {
        string(name: 'BRANCH', defaultValue: 'main', description: 'Git branch to build from')
    }

    stages {
        stage('Checkout') {
            steps {
                printBanner("CHECKING OUT SOURCE CODE: ${params.BRANCH}")
                cleanWs()
                checkout scm
            }
        }

        // Grouping all TestNG-related steps
        stage('TestNG Execution') {
            steps {
                dir('Hunt_Career_TestNG_Hybrid_Framework') {
                    script {
                        try {
                            stage('Build') {
                                printBanner('BUILDING THE PROJECT')
                                sh 'mvn -B clean install -DskipTests'
                            }

                            stage('Test') {
                                printBanner('RUNNING TESTNG TESTS')
                                sh 'mvn -B test'
                            }
                        } catch (err) {
                            echo "❌ TestNG tests failed: ${err.message}"
                            // Mark the build as failed
                            currentBuild.result = 'FAILURE'
                            // Re-throw the error to ensure the pipeline stops
                            error("Pipeline failed due to TestNG test failures.")
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            // This block will always run, regardless of the pipeline's status
            dir('Hunt_Career_TestNG_Hybrid_Framework') {
                printBanner('ARCHIVING & PUBLISHING REPORTS')

                // Archive and publish JUnit test results
                junit testResults: 'target/surefire-reports/testng-results.xml', allowEmptyResults: true

                // Publish HTML reports
                publishHTML(target: [
                    allowMissing: true,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: 'test-output/ExtentReports',
                    reportFiles: 'extentReport.html',
                    reportName: 'Extent Test Report'
                ])
            }
        }

        failure {
            // Send email notification on failure
            mail to: 'qa-team@example.com',
                 subject: "❌ TestNG Pipeline Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "The TestNG test pipeline failed. Please check Jenkins for details: ${env.BUILD_URL}"
        }
    }
}
