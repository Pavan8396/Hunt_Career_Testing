pipeline {
    agent any // You might want to specify a particular agent with Node.js installed

    environment {
        // Define any environment variables needed for your tests
        // CYPRESS_BASE_URL = "http://localhost:3000" // Example
    }

    tools {
        nodejs 'NodeJS'
        // If you have Node.js configured globally in Jenkins, you can specify it here
        //nodejs 'NodeJS-18' // Example: Replace with your NodeJS configuration name
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code...'
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'Installing npm dependencies...'
                // For Windows agents, use bat
                // bat 'npm install'
                // For Linux/macOS agents, use sh
                bat 'npm install'
            }
        }

        stage('Run Cypress Tests') {
            steps {
                echo 'Running Cypress tests and generating report...'
                // Using the script from package.json
                // For Windows agents, use bat
                // bat 'npm run test:run:report'
                // For Linux/macOS agents, use sh
                bat 'npm run test:run:report'
            }
        }

        stage('Archive Reports and Artifacts') {
            steps {
                echo 'Archiving reports and artifacts...'
                // Archive Mochawesome HTML reports (assuming default output location)
                archiveArtifacts artifacts: '**/mochawesome-report/mochawesome*.html', allowEmptyArchive: true
                // Archive Cypress screenshots (if any, on failure by default)
                archiveArtifacts artifacts: '**/cypress/screenshots/**/*.png', allowEmptyArchive: true
                // Archive Cypress videos (if any, by default for `cypress run`)
                archiveArtifacts artifacts: '**/cypress/videos/**/*.mp4', allowEmptyArchive: true
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
        unstable {
            echo 'Pipeline is unstable.'
        }
    }
}