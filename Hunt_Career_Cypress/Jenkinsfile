pipeline {
    agent any

    tools {
        nodejs 'NodeJS'
    }

    options {
        timestamps()
        timeout(time: 30, unit: 'MINUTES')
    }

    parameters {
        string(name: 'BRANCH', defaultValue: 'main', description: 'Git branch to build from')
        choice(name: 'ENV', choices: ['dev', 'qa', 'staging'], description: 'Target environment')
    }

    stages {
        stage('Checkout') {
            steps {
                echo '----------------------------------------'
                echo "   CHECKING OUT SOURCE CODE: ${params.BRANCH}"
                echo '----------------------------------------'
                cleanWs()
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('Hunt_Career_Cypress') {
                    echo '----------------------------------------'
                    echo '      INSTALLING NPM DEPENDENCIES'
                    echo '----------------------------------------'
                    bat 'npm ci'
                }
            }
        }

        stage('Verify Cypress Installation') {
            steps {
                dir('Hunt_Career_Cypress') {
                    echo '----------------------------------------'
                    echo '        VERIFYING CYPRESS BINARY'
                    echo '----------------------------------------'
                    bat 'npx cypress install'
                }
            }
        }

        stage('Run Cypress Tests') {
            steps {
                dir('Hunt_Career_Cypress') {
                    echo '----------------------------------------'
                    echo "   RUNNING CYPRESS TESTS ON ${params.ENV}"
                    echo '----------------------------------------'
                    script {
                        try {
                            // Headless mode for CI (default: Electron, you can add --browser chrome)
                            bat 'npx cypress run --headless --reporter mochawesome'
                        } catch (err) {
                            echo "⚠️ Cypress tests failed: ${err}"
                            currentBuild.result = 'FAILURE'
                            throw err
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo '----------------------------------------'
            echo '    ARCHIVING & PUBLISHING REPORTS'
            echo '----------------------------------------'
            archiveArtifacts artifacts: 'Hunt_Career_Cypress/mochawesome-report/**', allowEmptyArchive: true
            archiveArtifacts artifacts: 'Hunt_Career_Cypress/cypress/screenshots/**/*.png', allowEmptyArchive: true
            archiveArtifacts artifacts: 'Hunt_Career_Cypress/cypress/videos/**/*.mp4', allowEmptyArchive: true

            publishHTML(target: [
                allowMissing: true,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'Hunt_Career_Cypress/mochawesome-report',
                reportFiles: 'mochawesome.html',
                reportName: 'Cypress Test Report'
            ])
        }

        failure {
            mail to: 'qa-team@example.com',
                 subject: "❌ Cypress Pipeline Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "Please check Jenkins for details: ${env.BUILD_URL}"
        }
    }
}
