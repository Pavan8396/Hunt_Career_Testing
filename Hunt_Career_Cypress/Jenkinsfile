// ==============================
// Utility Function
// ==============================
def printBanner(message) {
    echo '----------------------------------------'
    echo "    ${message}"
    echo '----------------------------------------'
}

// ==============================
// Jenkins Pipeline
// ==============================
pipeline {
    agent any

    environment {
        CYPRESS_INSTALL_BINARY = '0'  // prevents Cypress from downloading browser binaries unnecessarily
    }

    options {
        timestamps()
        timeout(time: 30, unit: 'MINUTES')
        skipDefaultCheckout true
    }

    parameters {
        string(name: 'BRANCH', defaultValue: 'main', description: 'Git branch to build from')
    }

    stages {
        stage('Checkout') {
            steps {
                printBanner("CHECKING OUT SOURCE CODE: ${params.BRANCH}")
                cleanWs()
                checkout scm
            }
        }

        stage('Setup NodeJS & Install Dependencies') {
            steps {
                dir('Hunt_Career_Cypress') {
                    script {
                        printBanner('SETTING UP NODEJS')
                        // Setup NodeJS using Jenkins NodeJS plugin
                        def nodeHome = tool name: 'NodeJS', type: 'NodeJS'
                        env.PATH = "${nodeHome}/bin;${env.PATH}"

                        printBanner('INSTALLING NPM DEPENDENCIES')
                        def installStatus = bat(returnStatus: true, script: 'npm install')
                        if (installStatus != 0) {
                            error("❌ npm install failed. Pipeline aborted.")
                        }
                    }
                }
            }
        }

        stage('Run Cypress Tests') {
            steps {
                dir('Hunt_Career_Cypress') {
                    script {
                        printBanner('RUNNING CYPRESS TESTS')
                        def testStatus = bat(returnStatus: true, script: 'npx cypress run --headless')
                        if (testStatus != 0) {
                            echo "⚠️ Cypress tests failed (exit code ${testStatus})"
                            currentBuild.result = 'UNSTABLE'
                        } else {
                            echo "✅ Cypress tests completed successfully."
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            dir('Hunt_Career_Cypress') {
                script {
                    printBanner('ARCHIVING ARTIFACTS AND PUBLISHING REPORTS')

                    // Archive test artifacts
                    archiveArtifacts artifacts: 'cypress/reports/html/*.html', allowEmptyArchive: true
                    archiveArtifacts artifacts: 'cypress/screenshots/**/*.png', allowEmptyArchive: true
                    archiveArtifacts artifacts: 'cypress/videos/**/*.mp4', allowEmptyArchive: true

                    // Publish HTML report safely
                    try {
                        step([
                            $class: 'HTMLPublisher',
                            reportDir: 'cypress/reports/html',
                            reportFiles: 'index.html',
                            reportName: 'Cypress Test Report',
                            keepAll: true,
                            alwaysLinkToLastBuild: true,
                            allowMissing: true
                        ])
                    } catch (err) {
                        echo "⚠️ HTML report not published (plugin missing or error): ${err.message}"
                    }
                }
            }
        }

        unstable {
            echo "⚠️ Build marked as UNSTABLE due to Cypress test failures. Check the reports."
        }

        failure {
            echo "❌ Pipeline failed due to a critical error (not test failures)."
        }

        success {
            echo "✅ All Cypress tests passed successfully!"
        }
    }
}
