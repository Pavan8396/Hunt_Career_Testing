name: Grand Master Pipeline

on:
  workflow_dispatch:

jobs:
  full-pipeline:
    runs-on: ubuntu-22.04
    env:
      MONGO_URI: mongodb://localhost:27017/hcdb
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      CLIENT_URL: http://localhost:3000
      PORT: 5000

    steps:
      # --- Checkout both repos ---
      - name: Checkout Hunt_Career
        uses: actions/checkout@v3
        with:
          repository: Pavan8396/Hunt_Career
          path: Hunt_Career

      - name: Checkout Hunt_Career_Testing
        uses: actions/checkout@v3
        with:
          repository: Pavan8396/Hunt_Career_Testing
          path: Hunt_Career_Testing

      # --- Install MongoDB and restore DB ---
      - name: Install MongoDB
        run: |
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org
          sudo systemctl start mongod
          sleep 5
          sudo systemctl status mongod

      - name: Extract mongo dump
        run: tar -xvf mongo_dump.tar
        working-directory: Hunt_Career

      - name: Restore database
        run: mongorestore --uri="mongodb://localhost:27017/hcdb" ./mongo_dump/hcdb
        working-directory: Hunt_Career

      # --- Install frontend & backend dependencies ---
      - name: Install frontend dependencies
        run: npm install
        working-directory: Hunt_Career/frontend

      - name: Install backend dependencies
        run: npm install
        working-directory: Hunt_Career/backend

      # --- Start frontend & backend servers ---
      - name: Start frontend server
        run: nohup BROWSER=none HOST=0.0.0.0 PORT=3000 npm start > ../frontend.log 2>&1 &
        working-directory: Hunt_Career/frontend

      - name: Start backend server
        run: nohup npm start > ../backend.log 2>&1 &
        working-directory: Hunt_Career/backend

      # --- Wait for frontend to be ready ---
      - name: Wait for frontend to start
        run: |
          echo "⏳ Waiting for frontend to start on port 3000..."
          for i in {1..60}; do
            if curl -s http://localhost:3000 >/dev/null; then
              echo "✅ Frontend is up!"
              exit 0
            fi
            echo "Waiting for frontend..."
            sleep 3
          done
          echo "❌ Frontend did not start in time"
          cat Hunt_Career/frontend.log || true
          exit 1

      # --- Wait for backend to be ready ---
      - name: Wait for backend to start
        run: |
          echo "⏳ Waiting for backend on port 5000..."
          for i in {1..60}; do
            nc -z localhost 5000 && echo "✅ Backend is up!" && exit 0
            echo "Waiting for backend..."
            sleep 2
          done
          echo "❌ Backend did not start in time"
          cat Hunt_Career/backend.log || true
          exit 1

      # --- Set up JDK 21 for Selenium ---
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # --- Set up Chrome for Selenium ---
      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1

      # --- Run Selenium Tests ---
      - name: Run Selenium Tests (Headless)
        run: mvn clean test
        working-directory: Hunt_Career_Testing/Hunt_Career_TestNG_Hybrid_Framework

      # --- Run Cypress Tests ---
      - name: Install Cypress dependencies
        run: npm install
        working-directory: Hunt_Career_Testing/Hunt_Career_Cypress

      - name: Run Cypress Tests
        run: npx cypress run
        working-directory: Hunt_Career_Testing/Hunt_Career_Cypress

      # --- Run Playwright Tests ---
      - name: Install Playwright dependencies
        run: npm install
        working-directory: Hunt_Career_Testing/Hunt_Career_Playwright

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: Hunt_Career_Testing/Hunt_Career_Playwright

      - name: Run Playwright Tests
        run: npx playwright test
        working-directory: Hunt_Career_Testing/Hunt_Career_Playwright

      # --- Upload logs and test reports for debugging ---
      - name: Upload Test Reports and Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-and-logs
          path: |
            Hunt_Career_Testing/**/target/surefire-reports/**
            Hunt_Career_Testing/**/cypress/reports/**
            Hunt_Career_Testing/**/playwright-report/**
            Hunt_Career/frontend.log
            Hunt_Career/backend.log